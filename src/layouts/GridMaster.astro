---
import { Icon } from 'astro-icon/components';
import '@/styles/global.css';
import ExperienceList from '@/EN/Experience';
import ProyectList from '@/EN/Project';
import SkillList from '@/EN/Skill';
import PresentationList from '@/EN/Presentation';
import PresentationListES from '@/ES/Presentation';
const lang = Astro.url.pathname.split('/')[1];
---

<div
  class="dark:bg-bgPrimary relative h-[100vh] w-full text-[16px] p-3 dark:text-customGray text-gray-950"
>
  <div class="flex h-full w-full">
    <div
      slot="list-links"
      class="grid grid-rows-10 grid-flow-col xl:w-[30%] lg:w-[40%] md:w-[60%] max-md:hidden bg-opacity-30 backdrop-blur-lg dark:bg-bgPrimary bg-white z-99"
    >
      <div class="col-span-3 p-2 row-span-1">
        <div
          class={`relative dark:border-white border-black w-full h-full  border-[1px]`}
        >
          <div class="relative">
            <span
              class={`absolute z-10 -top-3 left-1 h-1  px-2`}
            >
              Home
              <div
                class="-z-10 absolute top-[9.5px] w-[73%] h-1 dark:bg-bgPrimary bg-white"
              >
              </div>
            </span>
          </div>
          <div
            class="pl-2 overflow-y-auto max-h-[60vh] h-full"
          >
            {
              lang === 'en'
                ? PresentationList.map((exp) => (
                    <button
                      class="cursor-pointer no-underline text-white "
                      onclick={`window.location.reload()`}
                    >
                      <div class="flex items-center  h-full w-[100%] text-wrap leading-[16px] text-black dark:text-customGray cursor-pointer">
                        <p class="text-[16px] text-left pt-3 max-2xl:text-[14px]">
                          {exp.tag}
                        </p>
                      </div>
                    </button>
                  ))
                : PresentationListES.map((exp) => (
                    <button
                      class="cursor-pointer no-underline text-white "
                      onclick={`window.location.reload()`}
                    >
                      <div class="flex items-center h-full w-[100%] text-wrap leading-[16px] text-black dark:text-customGray cursor-pointer">
                        <p class="text-[16px] text-left pt-3 max-2xl:text-[14px]">
                          {exp.tag}
                        </p>
                      </div>
                    </button>
                  ))
            }
          </div>
        </div>
      </div>
      <div class="col-span-3 p-2 row-span-3">
        <div
          class={`relative w-full h-full dark:border-white border-gray-950 border-[1px] dark:border `}
        >
          <div class="relative">
            <span
              class={`absolute z-10 -top-3 left-2 h-1  px-2 `}
            >
              Experience
              <div
                class="-z-10 absolute top-[9.5px] w-[86%] h-1 dark:bg-bgPrimary bg-white"
              >
              </div>
            </span>
          </div>
          <div
            class="w-full relative h-full flex-grow pt-3 overflow-y-scroll"
          >
            <div class="flex flex-col pl-1 gap-1">
              {
                ExperienceList.map((exp) => (
                  <a
                    href={`/${lang}/experience/${exp.id}`}
                    class={`py-1 pl-1 lg:pl-3  cursor-pointer no-underline  hover:bg-hoverBtn visited:bg-selectBtn `}
                    hx-get={`/${lang}/experience/${exp.id}`}
                    hx-target="#content"
                    hx-on="click: setActive(this)"
                    data-id={`experience-${exp.id}`}
                  >
                    <div
                      class={`w-[100%] text-wrap flex leading-[19px]  dark:text-customGray cursor-pointer hover:text-white `}
                    >
                      <div class="w-[50%] flex items-center">
                        <ul>
                          <li>
                            <p>{exp.title}</p>
                          </li>
                        </ul>
                      </div>
                      <div class="w-[15%] grid place-items-center">
                        @
                      </div>
                      <div class="w-[35%] flex items-center">
                        {exp.position}
                      </div>
                    </div>
                  </a>
                ))
              }
            </div>
          </div>
          <span
            class={`flex justify-center absolute -bottom-3 right-1 bg-transparent  px-2  dark:border-gray-500`}
          >
            <p class="z-10">
              <!-- {selectedId ? `${selectedId}` : '1'} of{' '} -->
              {ExperienceList.length}
            </p>
            <div
              class="absolute dark:bg-bgPrimary bg-white h-1 w-[80%] top-[11px]"
            >
            </div>
          </span>
        </div>
      </div>
      <div class="col-span-3 p-2 row-span-3">
        <div
          class={`relative w-full h-full dark:border-white border-gray-950 border-[1px] dark:border
        `}
        >
          <div class="relative">
            <span
              class={`absolute z-10 -top-3 left-2 h-1  px-2  `}
            >
              Projects
              <div
                class="-z-10 absolute top-[10px] w-[83%] h-1 dark:bg-bgPrimary bg-white"
              >
              </div>
            </span>
          </div>
          <div
            class="relative h-full flex-grow pt-3 overflow-y-scroll"
          >
            <div class="flex flex-col pl-1 gap-1">
              {
                ProyectList.map((prj) => (
                  <a
                    href={`/${lang}/project/${prj.id}`}
                    class={`py-1 pl-3 cursor-pointer no-underline hover:bg-hoverBtn `}
                    hx-get={`/${lang}/project/${prj.id}`}
                    hx-target="#content"
                  >
                    <div
                      class={`w-[100%] text-wrap flex leading-[19px]  dark:text-customGray cursor-pointer hover:text-white `}
                    >
                      <div class="w-[50%] flex items-center ">
                        <ul>
                          <li>
                            <p class="">{prj.title}</p>
                          </li>
                        </ul>
                      </div>
                    </div>
                  </a>
                ))
              }
            </div>
          </div>
          <span
            class={`flex justify-center absolute -bottom-3 right-1 bg-transparent  px-2 $ dark:border-gray-500`}
          >
            <p class="z-10">
              <!-- {selectedIdProyect ? `${selectedIdProyect}` : '1'} of{' '} -->
              {ProyectList.length}
            </p>
            <div
              class="absolute dark:bg-bgPrimary bg-white h-1 w-[80%] top-[11px]"
            >
            </div>
          </span>
        </div>
      </div>
      <div class="col-span-3 p-2 row-span-3">
        <div
          class={`relative w-full h-full dark:border-white border-gray-950 border-[1px] dark:border
           `}
        >
          <div class="relative">
            <span
              class={`absolute z-10 -top-3 left-2 h-1  px-3 `}
            >
              Skill - Tools
              <div
                class="-z-10 absolute top-[10px] w-[83%] h-1 dark:bg-bgPrimary bg-white"
              >
              </div>
            </span>
          </div>
          <div
            class="relative h-full flex-grow pt-3 overflow-y-scroll"
          >
            <div class="flex flex-col pl-1 gap-1">
              {
                SkillList.map((skl) => (
                  <a
                    href={`/${lang}/skill/${skl.id}`}
                    class={`py-1 pl-3 cursor-pointer no-underline over:bg-hoverBtn visited:bg-selectBtn   hover:bg-hoverBtn `}
                    hx-get={`/${lang}/skill/${skl.id}`}
                    hx-target="#content"
                  >
                    <div
                      class={`w-[100%] text-wrap flex leading-[19px]  dark:text-customGray cursor-pointer hover:text-white `}
                    >
                      <div class="w-[50%] flex items-center ">
                        <ul>
                          <li class="flex gap-2">
                            <Icon name={skl.icon} />
                            <p>{skl.title}</p>
                          </li>
                        </ul>
                      </div>
                    </div>
                  </a>
                ))
              }
            </div>
          </div>
          <span
            class={`flex justify-center absolute -bottom-3 right-1 bg-transparent  px-2  dark:border-gray-500`}
          >
            <p class="z-10">
              <!-- {selectedIdSkill ? `${selectedIdSkill}` : '1'} of{' '} -->
              {SkillList.length}
            </p>
            <div
              class="absolute dark:bg-bgPrimary bg-white h-1 w-[80%] top-[11px]"
            >
            </div>
          </span>
        </div>
      </div>
    </div>
    <div class="w-[100%] overflow-hidden">
      <div
        class="relative w-full h-full dark:border-gray-500 border-gray-950 border-[1px] overflow-y-auto"
      >
        <main id="content">
          <slot />
        </main>
      </div>
    </div>
  </div>
  <script src="https://unpkg.com/htmx.org@1.9.2"></script>
  <script defer>
    function setActive(element) {
      document.querySelectorAll('a').forEach((link) => {
        link.classList.remove('bg-selectBtn', 'text-white');
      });

      if (element) {
        element.classList.add('bg-selectBtn', 'text-white');
      }
    }

    document.querySelectorAll('a').forEach((link) => {
      link.addEventListener('click', (event) => {
        event.preventDefault();
        setActive(event.currentTarget);
      });
    });
  </script>
</div>
<script type="module">
  if (typeof window !== 'undefined') {
    const theme = window.localStorage.getItem('theme');
    document.cookie = `${theme}`;
  }
  if (typeof window !== 'undefined') {
    const language =
      window.localStorage.getItem('language');
    document.cookie = `${language}`;
  }
</script>
